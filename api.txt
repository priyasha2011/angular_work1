For maintaining 
add one folder config in asset
after that create file 
environment.json:
{
    "apiURL": "http://rfcampaigndev.ril.com/", ïƒ  this is for domain
   "login2fUrl": "http://commonutilsdev.ril.com/loginSrv/login2fa",
    "validateotp": "http://commonutilsdev.ril.com/loginSrv/validateOTP",
    "apiurls": {
        "save_image": "ewastetran/saveImageToNAS",
        "getTypesOfItems":"ewastetran/getItemMaster",
        "getimage": "ewastetran/getAttachment",
        "save_pledge":"ewastetran/savePledge"
    }
}
and also add this endpoint in enviorment/environment.ts 

Then create app-init service file to load all endpoint before application load

import { HttpClient } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { environment } from '../../../environments/environment';
@Injectable()
export class AppInitService {
    constructor(private httpClient: HttpClient) {
    }
    init(): Promise<any> {
        return new Promise((resolve, reject) => {
            setTimeout(() => {
                resolve(null);
            }, 500);
        });
    }
    loadUrls(): Promise<any> {
        const promise = this.httpClient.get('./assets/config/environment.json')
            .toPromise()
            .then((env: any) => {
                environment.apiURL = env.apiURL
                environment.validateotp = env.validateotp
                environment.login2fUrl = env.login2fUrl
                environment.apiurls = env.apiurls
                return env;
            });
        return promise;
    }
}

in loadUrls have to maintain all key which is maintained in config to load all endpoint


After that have to call that service app module to use that service:
For sevice we import service in providers

then add that in
providers:[
 AppInitService,
    { provide: APP_INITIALIZER, useFactory: init, deps: [AppInitService], multi: true },
    { provide: APP_INITIALIZER, useFactory: loadUrls, deps: [AppInitService], multi: true },
]

export class AppModule { }
export function init(appInitService: AppInitService) {
  return () => appInitService.init();
}
export function loadUrls(appInitService: AppInitService) {
  return () => appInitService.loadUrls();
}



after all this add servie in app module or in project to use api call

example:
create one service file names as dataservie.service.ts

in that
create function

	    commonGet(url){
        return this.http.get(url);
    }


and use this function in component where have to call that api

example

  callAPI(){
      this.dataService
        .commonGet(
          environment['apiURL'] + environment['apiurls']['getTypesOfItems']
        )
        .subscribe((res: any) => {
          console.log('================', res);
                })
  }

and call this function in ngOnint to load that function in page load only
